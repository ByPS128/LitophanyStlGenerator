// using System;
// using System.IO;
// using Stl;
// using System.Numerics;
//
// namespace LithophaneGenerator
// {
//     public class StlExporter2 : IStlExporter
//     {
//         private const string Author = "Author: YourName";
//         private const string Software = "Software: YourSoftware";
//         private const string Description = "Description: Generated by STLExporter2";
//
//         public void SaveAsSTL(double[,] heightMap, int finalWidthMM, int finalHeightMM, string filename, int resolution)
//         {
//             int width = heightMap.GetLength(1);
//             int height = heightMap.GetLength(0);
//             double scaleX = (double)finalWidthMM / width;
//             double scaleY = (double)finalHeightMM / height;
//
//             var mesh = new Mesh();
//
//             for (int y = 0; y < height - 1; y++)
//             {
//                 for (int x = 0; x < width - 1; x++)
//                 {
//                     var v0 = new Vector3((float)(x * scaleX), (float)(y * scaleY), (float)heightMap[y, x]);
//                     var v1 = new Vector3((float)((x + 1) * scaleX), (float)(y * scaleY), (float)heightMap[y, x + 1]);
//                     var v2 = new Vector3((float)(x * scaleX), (float)((y + 1) * scaleY), (float)heightMap[y + 1, x]);
//                     var v3 = new Vector3((float)((x + 1) * scaleX), (float)((y + 1) * scaleY), (float)heightMap[y + 1, x + 1]);
//
//                     // Add triangles
//                     mesh.AddTriangle(v0, v1, v2);
//                     mesh.AddTriangle(v1, v3, v2);
//                 }
//             }
//
//             // Save the mesh to file
//             mesh.Save(filename);
//         }
//     }
// }